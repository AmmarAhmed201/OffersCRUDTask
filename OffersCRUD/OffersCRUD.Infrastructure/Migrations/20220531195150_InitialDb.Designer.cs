// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OffersCRUD.Infrastructure;

namespace OffersCRUD.Infrastructure.Migrations
{
    [DbContext(typeof(OfferDbContext))]
    [Migration("20220531195150_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OffersCRUD.Domain.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("OffersCRUD.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = " Iphone 13 Mobile",
                            Price = 10000.0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = " Samsung s 10 Mobile",
                            Price = 80000.0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "mi 11 Mobile",
                            Price = 4000.0,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = " LG Smart",
                            Price = 20000.0,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = " Maths Books",
                            Price = 1000.0,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = " Coffe Machine",
                            Price = 9000.0,
                            StoreId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = " Ipad",
                            Price = 2000.0,
                            StoreId = 4
                        },
                        new
                        {
                            Id = 8,
                            Name = "Swimming tools",
                            Price = 300.0,
                            StoreId = 4
                        });
                });

            modelBuilder.Entity("OffersCRUD.Domain.ProductOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OfferId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StoreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OfferId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoreId");

                    b.ToTable("ProductOffers");
                });

            modelBuilder.Entity("OffersCRUD.Domain.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            Name = "Cairo store"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Alex",
                            Name = "Alex store"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Tanta",
                            Name = "Tanta store"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Giza",
                            Name = "Giza store"
                        });
                });

            modelBuilder.Entity("OffersCRUD.Domain.Product", b =>
                {
                    b.HasOne("OffersCRUD.Domain.Store", "Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("OffersCRUD.Domain.ProductOffer", b =>
                {
                    b.HasOne("OffersCRUD.Domain.Offer", "Offer")
                        .WithMany("ProductOffers")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OffersCRUD.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OffersCRUD.Domain.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Offer");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("OffersCRUD.Domain.Offer", b =>
                {
                    b.Navigation("ProductOffers");
                });

            modelBuilder.Entity("OffersCRUD.Domain.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
